{"version":3,"sources":["store/store.js","helpers/makeNewGame.js","components/Bee/Bee.js","components/GameField/GameField.js","components/Moves/Moves.js","components/Labyrinth/Labyrinth.js","App.js","serviceWorker.js","index.js"],"names":["initialState","goal","start","moves","usersChoice","beePositions","wrongAnswer","rightAnswer","step","createStore","state","action","type","Math","ceil","random","i","possibleMoves","push","move","floor","length","makeNewGame","window","__REDUX_DEVTOOLS_EXTENSION__","Bee","useSelector","useState","position","setPosition","dispatch","useDispatch","useEffect","setTimeout","fly","beeStyle","top","left","className","style","GameField","columns","handleClick","event","choice","parseInt","target","dataset","row","column","setUsersChoice","map","key","onClick","data-column","data-row","Moves","index","Labyrinth","isWrong","isRight","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfba5061.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\nimport { makeNewGame } from \"../helpers/makeNewGame\";\r\n\r\nconst NEW_GAME = \"NEW_GAME\";\r\nconst SET_USERS_CHOICE = \"SET_USERS_CHOICE\";\r\nconst WRONG_ANSWER = \"WRONG_ANSWER\";\r\nconst RIGHT_ANSWER = \"RIGHT_ANSWER\";\r\nconst SET_STEP = \"SET_STEP\";\r\n\r\nexport const newGame = () => ({ type: NEW_GAME });\r\nexport const setUsersChoice = (usersChoice) => ({\r\n  type: SET_USERS_CHOICE,\r\n  usersChoice,\r\n});\r\nexport const wrongAnswer = () => ({ type: WRONG_ANSWER });\r\nexport const rightAnswer = () => ({ type: RIGHT_ANSWER });\r\nexport const setStep = (step) => ({ type: SET_STEP, step });\r\n\r\nconst initialState = {\r\n  goal: [],\r\n  start: [],\r\n  moves: [],\r\n  usersChoice: [],\r\n  beePositions: [],\r\n  wrongAnswer: false,\r\n  rightAnswer: false,\r\n  step: -1,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case NEW_GAME:\r\n      return {\r\n        ...initialState,\r\n        ...makeNewGame(),\r\n      };\r\n    case SET_USERS_CHOICE:\r\n      return {\r\n        ...state,\r\n        usersChoice: action.usersChoice,\r\n      };\r\n    case WRONG_ANSWER:\r\n      return {\r\n        ...state,\r\n        wrongAnswer: true,\r\n      };\r\n    case RIGHT_ANSWER:\r\n      return {\r\n        ...state,\r\n        rightAnswer: true,\r\n      };\r\n    case SET_STEP:\r\n      return {\r\n        ...state,\r\n        step: action.step,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default createStore(\r\n  reducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","export const makeNewGame = () => {\r\n  const start = [Math.ceil(Math.random() * 3), Math.ceil(Math.random() * 3)];\r\n  let moves = [];\r\n  const beePositions = [];\r\n\r\n  let goal = [...start];\r\n  for (let i = 0; i < 10; i++) {\r\n    let possibleMoves = [];\r\n    if (goal[0] !== 3) {\r\n      possibleMoves.push(\"down\");\r\n    }\r\n    if (goal[0] !== 1) {\r\n      possibleMoves.push(\"up\");\r\n    }\r\n    if (goal[1] !== 1) {\r\n      possibleMoves.push(\"left\");\r\n    }\r\n    if (goal[1] !== 3) {\r\n      possibleMoves.push(\"right\");\r\n    }\r\n    const index = Math.floor(Math.random() * possibleMoves.length);\r\n    const move = possibleMoves[index];\r\n    moves.push(move);\r\n\r\n    switch (move) {\r\n      case \"up\":\r\n        goal[0] = goal[0] - 1;\r\n        break;\r\n      case \"down\":\r\n        goal[0] = goal[0] + 1;\r\n        break;\r\n      case \"left\":\r\n        goal[1] = goal[1] - 1;\r\n        break;\r\n      case \"right\":\r\n        goal[1] = goal[1] + 1;\r\n        break;\r\n      default:\r\n    }\r\n    beePositions.push([...goal]);\r\n  }\r\n  return {\r\n    goal: goal,\r\n    moves: moves,\r\n    start: start,\r\n    beePositions: beePositions,\r\n    usersChoice: [],\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Bee.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wrongAnswer, rightAnswer, setStep } from \"../../store/store\";\r\n\r\nexport const Bee = () => {\r\n  const moves = useSelector((state) => state.moves);\r\n  const usersChoice = useSelector((state) => state.usersChoice);\r\n  const start = useSelector((state) => state.start);\r\n  const [position, setPosition] = useState(start);\r\n  const beePositions = useSelector((state) => state.beePositions);\r\n  const dispatch = useDispatch();\r\n\r\n  const fly = () => {\r\n    for (let i = 0; i < 10; i++) {\r\n      setTimeout(() => {\r\n        dispatch(setStep(i));\r\n        setPosition(beePositions[i]);\r\n      }, i * 2000);\r\n    }\r\n    setTimeout(() => {\r\n      if (position[0] === usersChoice[0] && +position[1] === usersChoice[1]) {\r\n        dispatch(rightAnswer(true));\r\n      } else {\r\n        dispatch(wrongAnswer(true));\r\n      }\r\n    }, 21000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPosition(start);\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (usersChoice.length > 0) {\r\n      fly(moves);\r\n    }\r\n  }, [usersChoice]);\r\n\r\n  const beeStyle = {\r\n    top: `${(position[0] - 1) * 160 + 30}px`,\r\n    left: `${(position[1] - 1) * 160 + 30}px`,\r\n  };\r\n  return <span className=\"Bee\" style={beeStyle}></span>;\r\n};\r\n","import React from \"react\";\r\nimport \"./GameField.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUsersChoice } from \"../../store/store\";\r\nimport { Bee } from \"../Bee/Bee\";\r\n\r\nexport const GameField = () => {\r\n  const dispatch = useDispatch();\r\n  const start = useSelector((state) => state.start);\r\n  const usersChoice = useSelector((state) => state.usersChoice);\r\n  const rows = [1, 2, 3];\r\n  const columns = [1, 2, 3];\r\n\r\n  const handleClick = (event) => {\r\n    const choice = [\r\n      parseInt(event.target.dataset.row),\r\n      parseInt(event.target.dataset.column),\r\n    ];\r\n    dispatch(setUsersChoice(choice));\r\n  };\r\n\r\n  return (\r\n    <div className=\"GameField\">\r\n      <Bee />\r\n      <table className=\"GameField__table\">\r\n        <tbody className=\"GameField__tbody\">\r\n          {rows.map((row) => (\r\n            <tr key={row} className=\"GameField__row\">\r\n              {columns.map((column) => (\r\n                <td\r\n                  key={row + column}\r\n                  onClick={handleClick}\r\n                  className={`GameField__cell ${\r\n                    usersChoice[0] === row && usersChoice[1] === column\r\n                      ? \"GameField__cell--users-choice\"\r\n                      : \"\"\r\n                  } ${\r\n                    start[0] === row && start[1] === column\r\n                      ? \"GameField__cell--start\"\r\n                      : \"\"\r\n                  }`}\r\n                  data-column={column}\r\n                  data-row={row}\r\n                ></td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Moves.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Moves = () => {\r\n  const moves = useSelector((state) => state.moves);\r\n  const step = useSelector((state) => state.step);\r\n  return (\r\n    <div className=\"Moves\">\r\n      {moves.map((move, index) => (\r\n        <span\r\n          key={move + index}\r\n          className={`Moves__move ${\r\n            index === step ? \"Moves__move--active\" : \"\"\r\n          }`}\r\n        >\r\n          {move}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Labyrinth.scss\";\r\nimport { GameField } from \"../GameField/GameField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newGame } from \"../../store/store\";\r\nimport { Moves } from \"../Moves/Moves\";\r\n\r\nexport const Labyrinth = () => {\r\n  const dispatch = useDispatch();\r\n  const isWrong = useSelector((state) => state.wrongAnswer);\r\n  const isRight = useSelector((state) => state.rightAnswer);\r\n\r\n  useEffect(() => {\r\n    dispatch(newGame());\r\n  }, [dispatch]);\r\n\r\n  const handleClick = () => {\r\n    dispatch(newGame());\r\n  };\r\n\r\n  return (\r\n    <div className=\"Labyrinth\">\r\n      {isRight ? (\r\n        <span className=\"Labyrinth__message\">That`s right!!!</span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {isWrong ? (\r\n        <span className=\"Labyrinth__message\">Sorry, that`s wrong :(</span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <GameField />\r\n      <Moves />\r\n      <button onClick={handleClick} className=\"Labyrinth__new-game\">\r\n        Start new game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { Labyrinth } from \"./components/Labyrinth/Labyrinth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Labyrinth />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}